{"version":3,"file":"select.component.js","sourceRoot":"","sources":["../select.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAU,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;;IA0D7E;8BAhBsB,EAAE;4BAEA,EAAE;qBACT,KAAK;;8BAEmB;YACvC,WAAW,EAAE,aAAa;YAC1B,WAAW,EAAE,UAAU;SACxB;;;;wBAMyB,IAAI,YAAY,EAAE;KAE3B;IAEjB,kCAAQ,GAAR;QAAA,iBAIC;QAHC,UAAU,CAAC;YACT,KAAI,CAAC,KAAK,GAAG,IAAI,CAAA;SAClB,EAAE,GAAG,CAAC,CAAA;KACR;IAED,qCAAW,GAAX;QAAA,iBAyBC;QAxBC,UAAU,CAAC;YACT,EAAE,CAAC,CAAC,KAAI,CAAC,iBAAiB,IAAI,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACzC,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,KAAK,EAAE,IAAI,EAAE,KAAI,CAAC,iBAAiB,CAAC,CAAC;aAC3F;;;;;;;;;;;SAiBF,EAAE,IAAI,CAAC,CAAA;KAIT;IAED,sCAAY,GAAZ,UAAa,IAAI;QAAjB,iBAOC;QANC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;QACjB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,UAAU,CAAC;YACT,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAA;YAC1C,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,cAAc,CAAC,CAAA;SACjC,EAAE,EAAE,CAAC,CAAA;KACP;IAED,+BAAK,GAAL;QACE,IAAI,CAAC,cAAc,GAAG,EAAE,CAAA;KACzB;IAED,uCAAa,GAAb;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAC3E;IAED,yCAAe,GAAf,UAAgB,KAAK,EAAE,GAAG,EAAE,KAAK;QAC/B,IAAI,GAAG,GAAU,EAAE,CAAA;QACnB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACtC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;aACnB;SACF;QACD,MAAM,CAAC,GAAG,CAAA;KACX;IAED,8CAAoB,GAApB,UAAqB,KAAK,EAAE,GAAG,EAAE,KAAK;QACpC,IAAI,GAAG,CAAA;QACP,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACtC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;gBAC3B,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;aACf;SACF;QACD,MAAM,CAAC,GAAG,CAAA;KACX;;gBA9HF,SAAS,SAAC;oBACT,QAAQ,EAAE,mBAAmB;oBAC7B,QAAQ,EAAE,m2CAmCT;iBACF;;;;;mCAOE,KAAK;0BAIL,KAAK;sCACL,KAAK;6BAIL,MAAM;;0BAxDT;;SAyCa,eAAe","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'selector-uberflug',\n  template: `\n    <div class=\"dropdown\">\n  <button class=\"btn btn-default dropdown-toggle btn-block text-left\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\"\n    aria-haspopup=\"true\" aria-expanded=\"true\">\n    <span *ngIf=\"optionSelected\">\n      <span *ngIf=\"!optionSelected.id\">\n        {{configurations.placeholder}}\n      </span>\n      <span *ngIf=\"optionSelected.id\">\n        <span class=\"item-selected\" (click)=\"clear()\"></span>\n        {{optionSelected.name}}\n      </span>\n    </span>\n    <span class=\"caret\"></span>\n  </button>\n  <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n    <li class=\"sticky-search\">\n      <input type=\"text\" class=\"form-control search-select\" [(ngModel)]=\"search\" [placeholder]=\"configurations.search_text\" (keyup)=\"searchElement()\">\n    </li>\n\n    <div *ngIf=\"resultSearch.length == 0 && items && carga\">\n      <li *ngFor=\"let item of items\" (click)=\"itemSelected(item)\" [ngClass]=\"{'selected': item.id == optionSelected.id}\">\n        <a>{{item.name}}</a>\n      </li>\n    </div>\n\n    <div *ngIf=\"resultSearch.length !== 0  && items && carga\">\n      <li *ngFor=\"let item of resultSearch\" (click)=\"itemSelected(item)\" [ngClass]=\"{'selected': item.id == optionSelected.id}\">\n        <a>{{item.name}}</a>\n      </li>\n    </div>\n\n  </ul>\n\n</div>\n  `\n})\nexport class SelectComponent implements OnInit {\n  optionSelected: any = {};\n  search: string;\n  resultSearch: Items[] = [];\n  carga: boolean = false;\n  // INPUTS\n  @Input() configurations: Configuration = {\n    placeholder: \"Placeholder\",\n    search_text: \"BÃºsqueda\"\n  }\n  @Input() items: Items[];\n  @Input() elementIdSelected: any;\n  // @Input() zoneIdSelected\n  // @Input() beaconIdSelected\n  // OUTPUTS\n  @Output() selected: any = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.carga = true\n    }, 500)\n  }\n\n  ngOnChanges() {\n    setTimeout(() => {\n      if (this.elementIdSelected && this.items) {\n        this.optionSelected = this.objectFindByKeyEntry(this.items, \"id\", this.elementIdSelected);\n      }\n\n      // if(this.zoneIdSelected && this.items){\n\n      //   console.log(this.objectFindByKeyEntry(this.items, \"id\", this.zoneIdSelected))\n      //   this.optionSelected = this.objectFindByKeyEntry(this.items, \"id\", this.zoneIdSelected);\n      //   console.log(\"opt\",this.optionSelected)\n      //   console.log(\"opt\",this.items)\n\n      // }\n\n      // if(this.beaconIdSelected && this.items){\n\n      //   console.log(this.objectFindByKeyEntry(this.items, \"id\", this.beaconIdSelected))\n      //   this.optionSelected = this.objectFindByKeyEntry(this.items, \"id\", this.beaconIdSelected);\n      // }\n\n    }, 2500)\n\n\n\n  }\n\n  itemSelected(item) {\n    console.log(item)\n    this.optionSelected = item;\n    setTimeout(() => {\n      this.selected.emit(this.optionSelected.id)\n      console.log(this.optionSelected)\n    }, 50)\n  }\n\n  clear(){\n    this.optionSelected = {}\n  }\n\n  searchElement() {\n    this.resultSearch = this.objectFindByKey(this.items, \"name\", this.search);\n  }\n\n  objectFindByKey(array, key, value): any[] {\n    let res: any[] = []\n    for (var i = 0; i < array.length; i++) {\n      if (array[i][key].includes(value)) {\n        res.push(array[i])\n      }\n    }\n    return res\n  }\n\n  objectFindByKeyEntry(array, key, value) {\n    let res\n    for (var i = 0; i < array.length; i++) {\n      if (array[i][key] == value) {\n        res = array[i]\n      }\n    }\n    return res\n  }\n\n}\n\n\nexport interface Configuration {\n  placeholder?: string;\n  search_text?: string;\n}\n\nexport interface Items {\n  id?: number;\n  name?: string;\n}"]}