{"version":3,"file":"select.component.js","sourceRoot":"","sources":["../select.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAU,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;;IAwB7E;8BAhBqB,EAAE;4BAEA,EAAE;qBACT,KAAK;;8BAEkB;YACrC,WAAW,EAAE,aAAa;YAC1B,WAAW,EAAE,UAAU;SACxB;;;;wBAMwB,IAAI,YAAY,EAAE;KAE1B;IAEjB,kCAAQ,GAAR;QAAA,iBAIC;QAHC,UAAU,CAAC;YACT,KAAI,CAAC,KAAK,GAAG,IAAI,CAAA;SAClB,EAAE,GAAG,CAAC,CAAA;KACR;IAED,qCAAW,GAAX;QAAA,iBAyBC;QAxBG,UAAU,CAAC;YACT,EAAE,CAAA,CAAC,KAAI,CAAC,iBAAiB,IAAI,KAAI,CAAC,KAAK,CAAC,CAAA,CAAC;gBACvC,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,KAAK,EAAE,IAAI,EAAE,KAAI,CAAC,iBAAiB,CAAC,CAAC;aAC3F;;;;;;;;;;;SAiBF,EAAE,IAAI,CAAC,CAAA;KAIX;IAED,sCAAY,GAAZ,UAAa,IAAI;QAAjB,iBAOC;QANC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;QACjB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,UAAU,CAAC;YACT,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAA;YAC1C,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,cAAc,CAAC,CAAA;SACjC,EAAE,EAAE,CAAC,CAAA;KACP;IAGD,uCAAa,GAAb;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAC3E;IAED,yCAAe,GAAf,UAAgB,KAAK,EAAE,GAAG,EAAE,KAAK;QAC/B,IAAI,GAAG,GAAS,EAAE,CAAA;QAClB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACtC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;aACnB;SACF;QACD,MAAM,CAAC,GAAG,CAAA;KACX;IAED,8CAAoB,GAApB,UAAqB,KAAK,EAAE,GAAG,EAAE,KAAK;QACpC,IAAI,GAAG,CAAA;QACP,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACtC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;gBAC3B,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;aACf;SACF;QACD,MAAM,CAAC,GAAG,CAAA;KACX;;gBAzFF,SAAS,SAAC;oBACT,QAAQ,EAAE,YAAY;oBACtB,WAAW,EAAE,yBAAyB;oBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;iBACtC;;;;;mCAOE,KAAK;0BAIL,KAAK;sCACL,KAAK;6BAIL,MAAM;;0BAtBT;;SAOa,eAAe","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.css']\n})\nexport class SelectComponent implements OnInit {\n  optionSelected:any = {};\n  search:string;\n  resultSearch:Items[] = [];\n  carga:boolean = false;\n  // INPUTS\n  @Input() configurations:Configuration ={\n    placeholder: \"Placeholder\",\n    search_text: \"BÃºsqueda\"\n  }\n  @Input() items:Items[];\n  @Input() elementIdSelected:any;\n  // @Input() zoneIdSelected\n  // @Input() beaconIdSelected\n  // OUTPUTS\n  @Output() selected:any = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    setTimeout(()=>{\n      this.carga = true\n    }, 500)\n  }\n\n  ngOnChanges(){\n      setTimeout(() =>{\n        if(this.elementIdSelected && this.items){\n          this.optionSelected = this.objectFindByKeyEntry(this.items, \"id\", this.elementIdSelected);\n        }\n     \n        // if(this.zoneIdSelected && this.items){\n          \n        //   console.log(this.objectFindByKeyEntry(this.items, \"id\", this.zoneIdSelected))\n        //   this.optionSelected = this.objectFindByKeyEntry(this.items, \"id\", this.zoneIdSelected);\n        //   console.log(\"opt\",this.optionSelected)\n        //   console.log(\"opt\",this.items)\n \n        // }\n\n        // if(this.beaconIdSelected && this.items){\n          \n        //   console.log(this.objectFindByKeyEntry(this.items, \"id\", this.beaconIdSelected))\n        //   this.optionSelected = this.objectFindByKeyEntry(this.items, \"id\", this.beaconIdSelected);\n        // }\n        \n      }, 2500)\n      \n\n    \n  }\n\n  itemSelected(item){\n    console.log(item)\n    this.optionSelected = item;\n    setTimeout(()=>{\n      this.selected.emit(this.optionSelected.id)\n      console.log(this.optionSelected)\n    }, 50)\n  }\n\n\n  searchElement(){\n    this.resultSearch = this.objectFindByKey(this.items, \"name\", this.search);\n  }\n\n  objectFindByKey(array, key, value):any[] {\n    let res:any[] = []\n    for (var i = 0; i < array.length; i++) {\n      if (array[i][key].includes(value)) {\n        res.push(array[i])\n      }\n    }\n    return res\n  }\n\n  objectFindByKeyEntry(array, key, value) {\n    let res\n    for (var i = 0; i < array.length; i++) {\n      if (array[i][key] == value) {\n        res = array[i]\n      }\n    }\n    return res\n  }\n\n}\n\n\nexport interface Configuration {\n  placeholder?: string;\n  search_text?: string;\n}\n\nexport interface Items {\n  id?: number;\n  name?: string;\n}"]}